* (1)Loading:-Loading means reading class file and store corresponding binary data in method area.
   For each .class file JVM will store the some information in method area:-name of the class,
   parent class name,modifiers,variables,methods and constant pool information.
   
*  (2)Linking:-It perform 3 activities:-(i)Verification (ii)Prepration (iii)Resolution.
      (i)Verification:- It is the process of ensuring that binary representation of a class structural correct or NOT.
	  *  That is JVM will check weather .class file generated by valid compiler or NOT.Weather .class file is 
	     properly formatted or not.
	  *  Internally byte code verifier which is part of classloader subsystem is responsible for this activity. 
      *  If verification fails then we will get runtime exception saying java.lang.VerifyError.
	  
	 (ii)Prepration:-In this phase JVM will allocate memory for the class level static variables and assign default
	     values(But not original values).
		 Note:- Original values will be assigned in initilization phase.
		 
	(iii)Resolution:-It is the process of replacing symbolic references used by the loaded type with original references.
	  *  Symolic references are resolved into direct references by searching through method area to locate the referenced entity.

* (3)Initialization:-In this phase all static variables will be assigned with original values and static blocks
                     will be executed from top to bottom and from parent to child.
 
   NOTE:- While,loading,linking and initilization if any errors occurs then we will get Runtime exception saying
          java.lang.LinkageError.
		* VerifyeError is the child class of linkage error.    